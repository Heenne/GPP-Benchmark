Bootstrap: docker
From: osrf/ros:humble-desktop

%environment
	bash -c "source /opt/ros/humble/setup.bash"

%setup
    # Create cirp_ws folder for %post
	mkdir -p ${SINGULARITY_ROOTFS}/cirp_ws/src

# %files
	# $HOME/cirp_ws/src/ /cirp_ws/src

%post
	# Update and upgrade the Ubuntu system
	apt-get -y update
	apt-get -y upgrade

	# Install necessary and helpful packages
	apt-get install -y xauth
	apt-get install -y file
	apt-get install -y less
	apt-get install -y x11-apps
	apt-get install -y psmisc
	apt-get install -y python3-pip

	# Install specific version of python setuptools. Otherwise colcon build will fail.
	# See ROS2-for-beginners tutorial on Udemy lesson "Create a Python Package"
	bash -c "pip3 install setuptools==58.2.0"

	# Install ros dependencies
	apt-get install -y python3-colcon-common-extensions
	apt-get install -y python3-vcstool
	apt-get install -y python3-rosdep
	apt-get install -y ros-humble-xacro
	apt-get install -y ros-humble-rqt*

    # Clone MiR repo
	bash -c "cd ${SINGULARITY_ROOTFS}/cirp_ws/src \
		&& git clone -b ros2 https://github.com/mintar/mir_robot.git"

	# Clone depending repos through vcs
	# Install all necessary packages
    bash -c "cd ${SINGULARITY_ROOTFS}/cirp_ws \
		&& ls \
		&& vcs import ${SINGULARITY_ROOTFS}/cirp_ws/src < ${SINGULARITY_ROOTFS}/cirp_ws/src/mir_robot/ros2.repos --recursive \
        && rosdep update --rosdistro $ROS_DISTRO \
	    && rosdep install --from-paths src --ignore-src -r -y --rosdistro $ROS_DISTRO \
	 	&& source /opt/ros/humble/setup.bash"
		
	# Workaround against some incompatible section in library
	# If this is not included Gazebo will just crash during startup
	strip --remove-section=.note.ABI-tag /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.15.3

%runscript
	# Param: TASK | Mandatory
	# This param defines which launch file will be started using the pipeline_exe.sh
	if [ -z $1 ]
	then
		echo "Parameter 1 - task name - is missing"
		exit
	fi
	export TASK="$1"

	# Execute the script which will start the right launch file
	# The script will use the set environmental variables
	exec /bin/bash -rcfile -c pipeline_exe.sh

%labels
    Author Henrik Lurz
    Version v0.1.0