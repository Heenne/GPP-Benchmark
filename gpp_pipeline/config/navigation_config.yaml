global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: false
      # offset: front / back from base_link
      footprint: '[[0.488,-0.293],[0.488,0.293],[-0.412,0.293],[-0.412,-0.293]]'
      footprint_padding: 0.01
      track_unknown_space: true
      plugins: ["static_layer", "inflation_layer"] # "obstacle_layer", 
      # obstacle_layer:
      #   plugin: "nav2_costmap_2d::ObstacleLayer"
      #   enabled: True
      #   observation_sources: scan
      #   footprint_clearing_enabled: true
      #   max_obstacle_height: 2.0
      #   combination_method: 1
      #   scan:
      #     topic: /scan
      #     obstacle_max_range: 2.5
      #     obstacle_min_range: 0.0
      #     raytrace_max_range: 3.0
      #     raytrace_min_range: 0.0
      #     max_obstacle_height: 2.0
      #     min_obstacle_height: 0.0
      #     clearing: True
      #     marking: True
      #     data_type: "LaserScan"
      #     inf_is_valid: false
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.55
        cost_scaling_factor: 3.0
        inflate_unknown: false
        inflate_around_unknown: true
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: false
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: false

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: True
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: true
      allow_unknown: true

    # GridBased:
    #   plugin: "nav2_smac_planner/SmacPlannerLattice" # In Iron and older versions, "/" was used instead of "::"
    #   allow_unknown: true                 # Allow traveling in unknown space
    #   tolerance: 0.25                     # dist-to-goal heuristic cost (distance) for valid tolerance endpoints if exact goal cannot be found.
    #   max_iterations: 1000000             # Maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
    #   max_on_approach_iterations: 1000    # Maximum number of iterations after within tolerances to continue to try to find exact solution
    #   max_planning_time: 5.0              # Max time in s for planner to plan, smooth
    #   analytic_expansion_ratio: 3.5       # The ratio to attempt analytic expansions during search for final approach.
    #   analytic_expansion_max_length: 3.0  # For Hybrid/Lattice nodes The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
    #   analytic_expansion_max_cost: 200.0  # The maximum single cost for any part of an analytic expansion to contain and be valid, except when necessary on approach to goal
    #   analytic_expansion_max_cost_override: false  #  Whether or not to override the maximum cost setting if within critical distance to goal (ie probably required)
    #   reverse_penalty: 2.0                # Penalty to apply if motion is reversing, must be => 1
    #   change_penalty: 0.05                # Penalty to apply if motion is changing directions (L to R), must be >= 0
    #   non_straight_penalty: 1.05          # Penalty to apply if motion is non-straight, must be => 1
    #   cost_penalty: 2.0                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
    #   rotation_penalty: 5.0               # Penalty to apply to in-place rotations, if minimum control set contains them
    #   retrospective_penalty: 0.015
    #   # lattice_filepath: ""                # The filepath to the state lattice graph
    #   lookup_table_size: 20.0             # Size of the dubin/reeds-sheep distance window to cache, in meters.
    #   cache_obstacle_heuristic: false     # Cache the obstacle map dynamic programming distance expansion heuristic between subsequent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
    #   allow_reverse_expansion: false      # If true, allows the robot to use the primitives to expand in the mirrored opposite direction of the current robot's orientation (to reverse).
    #   smooth_path: True                   # If true, does a simple and quick smoothing post-processing to the path
    #   smoother:
    #     max_iterations: 1000
    #     w_smooth: 0.3
    #     w_data: 0.2
    #     tolerance: 1.0e-10
    #     do_refinement: true
    #     refinement_num: 2

    # GridBased:
    #   plugin: "nav2_theta_star_planner::ThetaStarPlanner" # In Iron and older versions, "/" was used instead of "::"
    #   how_many_corners: 8
    #   w_euc_cost: 1.0
    #   w_traversal_cost: 2.0
    #   w_heuristic_cost: 1.0

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

bt_navigator:
  ros__parameters:
    use_sim_time: True
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    default_nav_to_pose_bt_xml: "$(find-pkg-share gpp_pipeline)/behavior_trees/navigate_to_pose.xml"
    default_nav_through_poses_bt_xml: "$(find-pkg-share gpp_pipeline)/behavior_trees/navigate_through_poses_w_replanning_and_recovery.xml"
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    #
    # Note: Not quite correct, params that are not mentioned can not be substituted!
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    error_code_names:
      - compute_path_error_code

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: True

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    wait:
      plugin: "nav2_behaviors/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: true
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.5
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2